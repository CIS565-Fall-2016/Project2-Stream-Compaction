****************
** SCAN TESTS **
****************
    [  38  19  38  37   5  47  15  35   0  12   3   0  42 ...  35   0 ]
==== cpu scan, power-of-two ====
    [   0  38  57  95 132 137 184 199 234 234 246 249 249 ... 1604374 1604409 ]
CPU scan power-of-two number time is 0.501300 ms
==== cpu scan, non-power-of-two ====
    [   0  38  57  95 132 137 184 199 234 234 246 249 249 ... 1604305 1604316 ]
    passed
CPU scan non-power-of-two number time is 0.502800 ms
==== naive scan, power-of-two ====
GPU Naive Scan time is 0.131680 ms
    [   0  38  57  95 132 137 184 199 234 234 246 249 249 ... 1604374 1604409 ]
    passed
==== naive scan, non-power-of-two ====
GPU Naive Scan time is 0.129920 ms
    [   0  38  57  95 132 137 184 199 234 234 246 249 249 ...   0   0 ]
    passed
==== work-efficient scan, power-of-two ====
GPU Efficient Scan time is 0.347968 ms
    passed
==== work-efficient scan, non-power-of-two ====
GPU Efficient Scan time is 0.344672 ms
    passed
==== thrust scan, power-of-two ====
GPU Thrust Scan time is 0.245728 ms
    passed
==== thrust scan, non-power-of-two ====
GPU Thrust Scan time is 0.214912 ms
    passed

*********************************************
*************** EXTRA CREDIT ****************
************* RADIX SORT TESTS **************
*************** POWER-OF-TWO ****************
*********************************************
    [  38 7719 21238 2437 8855 11797 8365 32285 10450 30612 5853 28100 1142 ... 15085 26505 ]
==== std sort for comparasion ====
std sort for power-of-two number time is 4.010500 ms
    [   1   1   1   1   2   2   2   3   3   4   4   4   4 ... 32766 32767 ]

==== Extra : RadixSort ====
GPU Radix Sort time is 7.358048 ms
    passed
    [   1   1   1   1   2   2   2   3   3   4   4   4   4 ... 32766 32767 ]


*********************************************
*************** EXTRA CREDIT ****************
************* RADIX SORT TESTS **************
************* NON-POWER-OF-TWO **************
*********************************************
    [  38 7719 21238 2437 8855 11797 8365 32285 10450 30612 5853 28100 1142 ... 15085 26505 ]
==== std sort for comparasion ====
std sort for non-power-of-two number time is 3.509900 ms
    [   1   1   1   1   2   2   2   3   3   4   4   4   4 ... 32766 32767 ]

==== Extra : RadixSort ====
GPU Radix Sort time is 7.425376 ms
    passed
    [   1   1   1   1   2   2   2   3   3   4   4   4   4 ... 32766 32767 ]


*****************************
** STREAM COMPACTION TESTS **
*****************************
    [   2   3   2   1   3   1   1   1   2   0   1   0   2 ...   1   0 ]
==== cpu compact without scan, power-of-two ====
    [   2   3   2   1   3   1   1   1   2   1   2   1   1 ...   1   1 ]
    passed
CPU compact without scan power-of-two number time is 0.000000 ms
==== cpu compact without scan, non-power-of-two ====
    [   2   3   2   1   3   1   1   1   2   1   2   1   1 ...   3   1 ]
    passed
CPU compact without scan non-power-of-two number time is 0.501300 ms
==== cpu compact with scan ====
    [   2   3   2   1   3   1   1   1   2   1   2   1   1 ...   1   1 ]
    passed
CPU compact with scan time is 0.000000 ms
==== work-efficient compact, power-of-two ====
GPU Efficient Compact time is 0.499584 ms
    passed
==== work-efficient compact, non-power-of-two ====
GPU Efficient Compact time is 0.499040 ms
    passed
