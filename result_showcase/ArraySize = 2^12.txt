****************
** SCAN TESTS **
****************
    [  38  19  38  37   5  47  15  35   0  12   3   0  42 ...  24   0 ]
==== cpu scan, power-of-two ====
    [   0  38  57  95 132 137 184 199 234 234 246 249 249 ... 99378 99402 ]
CPU scan power-of-two number time is 0.000000 ms
==== cpu scan, non-power-of-two ====
    [   0  38  57  95 132 137 184 199 234 234 246 249 249 ... 99347 99371 ]
    passed
CPU scan non-power-of-two number time is 0.000000 ms
==== naive scan, power-of-two ====
GPU Naive Scan time is 0.047008 ms
    [   0  38  57  95 132 137 184 199 234 234 246 249 249 ... 99378 99402 ]
    passed
==== naive scan, non-power-of-two ====
GPU Naive Scan time is 0.045472 ms
    [   0  38  57  95 132 137 184 199 234 234 246 249 249 ...   0   0 ]
    passed
==== work-efficient scan, power-of-two ====
GPU Efficient Scan time is 0.141728 ms
    passed
==== work-efficient scan, non-power-of-two ====
GPU Efficient Scan time is 0.167264 ms
    passed
==== thrust scan, power-of-two ====
GPU Thrust Scan time is 0.027616 ms
    passed
==== thrust scan, non-power-of-two ====
GPU Thrust Scan time is 0.019008 ms
    passed

*********************************************
*************** EXTRA CREDIT ****************
************* RADIX SORT TESTS **************
*************** POWER-OF-TWO ****************
*********************************************
    [  38 3623 758 2437 663 3605 173 3613 2258 1940 1757 3524 1142 ... 3336 120 ]
==== std sort for comparasion ====
std sort for power-of-two number time is 0.000000 ms
    [   0   1   1   1   3   3   4   5   6   6   7   8   8 ... 4093 4094 ]

==== Extra : RadixSort ====
GPU Radix Sort time is 2.223136 ms
    passed
    [   0   1   1   1   3   3   4   5   6   6   7   8   8 ... 4093 4094 ]


*********************************************
*************** EXTRA CREDIT ****************
************* RADIX SORT TESTS **************
************* NON-POWER-OF-TWO **************
*********************************************
    [  38 3623 758 2437 663 3605 173 3613 2258 1940 1757 3524 1142 ... 3336 120 ]
==== std sort for comparasion ====
std sort for non-power-of-two number time is 0.000000 ms
    [   0   1   1   1   3   3   4   5   6   6   7   8   8 ... 4093 4094 ]

==== Extra : RadixSort ====
GPU Radix Sort time is 2.448928 ms
    passed
    [   0   1   1   1   3   3   4   5   6   6   7   8   8 ... 4093 4094 ]


*****************************
** STREAM COMPACTION TESTS **
*****************************
    [   2   3   2   1   3   1   1   1   2   0   1   0   2 ...   0   0 ]
==== cpu compact without scan, power-of-two ====
    [   2   3   2   1   3   1   1   1   2   1   2   1   1 ...   2   1 ]
    passed
CPU compact without scan power-of-two number time is 0.000000 ms
==== cpu compact without scan, non-power-of-two ====
    [   2   3   2   1   3   1   1   1   2   1   2   1   1 ...   2   1 ]
    passed
CPU compact without scan non-power-of-two number time is 0.000000 ms
==== cpu compact with scan ====
    [   2   3   2   1   3   1   1   1   2   1   2   1   1 ...   2   1 ]
    passed
CPU compact with scan time is 0.000000 ms
==== work-efficient compact, power-of-two ====
GPU Efficient Compact time is 0.284064 ms
    passed
==== work-efficient compact, non-power-of-two ====
GPU Efficient Compact time is 0.266176 ms
    passed
