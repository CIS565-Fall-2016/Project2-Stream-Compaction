
**********************
**  TEST PARAMETERS **
**********************
        Array size = 256
        BlockSize  = 128


****************
** SCAN TESTS **
****************
    [  38  19  38  37   5  47  15  35   0  12   3   0  42 ...  26   0 ]
==== cpu scan, power-of-two ====
<==TIMER==> Scan::CPU =  0.000 ms <==TIMER==>
    [   0  38  57  95 132 137 184 199 234 234 246 249 249 ... 6203 6229 ]

==== cpu scan, non-power-of-two ====
<==TIMER==> Scan::CPU =  0.000 ms <==TIMER==>
    [   0  38  57  95 132 137 184 199 234 234 246 249 249 ... 6146 6190 ]
    passed

==== naive scan, power-of-two ====
<==TIMER==> Scan::GPU::Naive =  0.031 ms <==TIMER==>
    passed

==== naive scan, non-power-of-two ====
<==TIMER==> Scan::GPU::Naive =  0.031 ms <==TIMER==>
    passed

==== work-efficient scan, power-of-two ====
<==TIMER==> Scan::GPU::Efficient =  0.066 ms <==TIMER==>
    passed

==== work-efficient scan, non-power-of-two ====
<==TIMER==> Scan::GPU::Efficient =  0.065 ms <==TIMER==>
    passed

==== thrust scan, power-of-two ====
<==TIMER==> Scan::Thrust =  2.567 ms <==TIMER==>
    passed

==== thrust scan, non-power-of-two ====
<==TIMER==> Scan::Thrust =  0.018 ms <==TIMER==>
    passed


*****************************
** STREAM COMPACTION TESTS **
*****************************
    [   2   3   2   1   3   1   1   1   2   0   1   0   2 ...   0   0 ]
==== cpu compact without scan, power-of-two ====
<==TIMER==> Compact::CPU::WithoutScan =  0.000 ms <==TIMER==>
    [   2   3   2   1   3   1   1   1   2   1   2   1   1 ...   2   1 ]
    passed

==== cpu compact without scan, non-power-of-two ====
<==TIMER==> Compact::CPU::WithoutScan =  0.000 ms <==TIMER==>
    [   2   3   2   1   3   1   1   1   2   1   2   1   1 ...   3   2 ]
    passed

==== cpu compact with scan ====
<==TIMER==> Compact::CPU::WithScan =  0.000 ms <==TIMER==>
    [   2   3   2   1   3   1   1   1   2   1   2   1   1 ...   2   1 ]
    passed

==== work-efficient compact, power-of-two ====
<==TIMER==> Compact::GPU::Efficient =  0.086 ms <==TIMER==>
    passed

==== work-efficient compact, non-power-of-two ====
<==TIMER==> Compact::GPU::Efficient =  0.085 ms <==TIMER==>
    passed


*****************************
****** RADIX SORT TESTS *****
*****************************
    [  38  39 246 133 151  21 173  29 210 148 221 196 118 ... 156 177 ]
==== std::sort ====
<==TIMER==> CPU::std::sort =  0.000 ms <==TIMER==>
    [   0   0   1   1   3   3   3   6   7   7   7   8   9 ... 253 255 ]

==== GPU::RadixSort ====
<==TIMER==> GPU::Radix Sort =  2.772 ms <==TIMER==>
    passed

Press any key to continue . . .